import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { trpc } from "../utils/trpc";
import VotingBooth from "../components/VotingBooth";
import Link from "next/link";

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

const Home: NextPage = () => {
  const { data: fighters, isLoading, refetch } = trpc.useQuery(["voting.getFighter"], {
    refetchInterval: false,
    refetchOnReconnect: false,
    refetchOnWindowFocus: false,
  });

  if(isLoading) {
    return <div>Loading...</div>;
  }

  if(fighters && fighters.firstFighter && fighters.secondFighter) {
    return (
      <>
        <Head>
          <title>Weakest Z-fighter</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
  
        <h1 className="text-2xl font-medium p-4 bg-slate-600 text-white text-right">
          <Link href="/">Results</Link>
        </h1>
        <main className="container flex flex-col items-center gap-4 h-full p-4">
          <h1 className="text-5xl leading-normal font-extrabold text-gray-700">
            Who is the weakest
          </h1>
          <p>click the image to vote</p>
          <VotingBooth
            firstFighter={fighters?.firstFighter}
            secondFighter={fighters?.secondFighter}
            refetch={() => refetch()}
          />
          <div></div>
        </main>
      </>
    );

  }
  return (
    <>
    <div>Some error occured</div>
    </>
  )

  
};

export default Home;
