import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { trpc } from "../utils/trpc";
import VotingBooth from "../components/VotingBooth";
import Navbar from "../components/Navbar";
import Loading from "../components/Loading";
import Link from "next/link";

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

const Home: NextPage = () => {
  const {
    data: fighters,
    isLoading,
    refetch,
  } = trpc.useQuery(["voting.getFighter"], {
    refetchInterval: false,
    refetchOnReconnect: false,
    refetchOnWindowFocus: false,
  });

  return (
    <>
      <Head>
        <title>Weakest Z-fighter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      
      {isLoading && (<Loading />)}
      <Navbar />
      {!isLoading &&
        fighters &&
        fighters.firstFighter &&
        fighters.secondFighter && (
          <>
 
          <main className="flex flex-col justify-center items-center gap-2 h-full m-2 p-2">
            
            <h1 className="text-5xl text-center leading-normal font-extrabold text-gray-300">
              Who is the weakest
            </h1>
            <p className="text-gray-500">choose the weaker character</p>
            <VotingBooth
              firstFighter={fighters?.firstFighter}
              secondFighter={fighters?.secondFighter}
              refetch={() => refetch()}
            />
          </main>
          </>
        )}
    </>
  );
};

export default Home;
